<?php

namespace Shop\ShopBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Shop\ShopBundle\Entity\Order as order;

/**
 * OrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderRepository extends EntityRepository
{
    public function getOrder($em,$user,$cart=null,$state=null){
        $qd = $this->createQueryBuilder('o')
                ->select('o')
                ->where('o.user='.$user->getId())
                ->andWhere('o.active =1')
                ->andWhere('o.state =1');
        $result=$qd->getQuery()->getResult();
        if (empty($result)){
            $result =new order();
            $date = date('m/d/Y h:i:s a', time());
            $result->setUser($user);
            $result->setCart($cart);
            $result->setActive(1);
            $result->setState($state);
            $result->setDate($date);
            $em->persist($result);
        }else{
            $result=$result[0];
        }
        return $result;
        
    }
    public function getAllForUser($user){
        $qd = $this->createQueryBuilder('o')
                ->select('o')
                ->where('o.user='.$user->getId())
                ->andWhere('o.active =1');
        
        return $qd->getQuery()->getResult();       
    }
    
    public function getByIdForUser($user,$ordid){
        $qd = $this->createQueryBuilder('o')
                ->select('o')
                ->where('o.user='.$user->getId())
                ->where('o.id='.$ordid)
                ->andWhere('o.active =1');
        $result=$qd->getQuery()->getResult();     
        return $result[0];
    }
    

}
